# Build options for Game Card arduino project
SKETCH := GameCard
BOARD :=  arduino:avr:uno
PORT :=   /dev/ttyACM0
ASC :=    arduino

# Build options for Rom Writer C# project
WR_OBJNAME :=   rom-writer
WR_PROJNAME :=  rom-writer
WR_FRAMEWORK := net5.0
WR_RUNTIME :=   linux-x64
WR_SRC :=       $(wildcard rom-writer/src/*.cs)

# Build options for Rom Writer arduino code
WR_SKETCH := RomWriter
WR_BOARD :=  arduino:avr:uno
WR_ASC :=    arduino

# Autogenerated stuff
HPPFILES :=    $(wildcard $(SKETCH)/*.hpp)
CPPFILES :=    $(wildcard $(SKETCH)/*.cpp)
WR_HPPFILES := $(wildcard rom-writer/$(WR_SKETCH)/*.hpp)
WR_CPPFILES := $(wildcard rom-writer/$(WR_SKETCH)/*.cpp)

# Build options for assembler aC# project
AS_OBJNAME :=   gcas
AS_PROJNAME :=  assembler
AS_FRAMEWORK := net5.0
AS_RUNTIME :=   linux-x64
AS_SRC :=       $(wildcard assembler/src/*.cs)

# Helper targets
.PHONY : all
all : $(WR_OBJNAME) upload

.PHONY : clean
clean :
	rm -rf rom-writer/bin
	rm -rf rom-writer/obj
	rm -rf $(WR_OBJNAME)-$(WR_RUNTIME)
	rm -rf libSystem.IO.Ports.Native.so
	rm -rf assembler/bin
	rm -rf assembler/obj
	rm -rf $(AS_OBJNAME)-$(AS_RUNTIME)
	rm -rf /var/tmp/.net

.PHONY : list
list :
	@$(MAKE) -pRrq -f $(lastword $(MAKEFILE_LIST)) : 2>/dev/null | awk -v RS= -F: '/^# File/,/^# Finished Make data base/ {if ($$1 !~ "^[#.]") {print $$1}}' | sort | egrep -v -e '^[^[:alnum:]]' -e '^$@$$'

# Game Card targets
.PHONY : verify
verify : $(SKETCH)/$(SKETCH).ino $(HPPFILES) $(CPPFILES)
	$(ASC) --verify --board $(BOARD) $<

.PHONY : upload
upload : $(SKETCH)/$(SKETCH).ino $(HPPFILES) $(CPPFILES)
	$(ASC) --upload --board $(BOARD) $<

# ROM Writer targets
.PHONY : writer-verify
writer-verify : rom-writer/$(WR_SKETCH)/$(WR_SKETCH).ino $(WR_HPPFILES) $(WR_CPPFILES)
	$(WR_ASC) --verify --board $(WR_BOARD) $<

.PHONY : writer-upload
writer-upload : rom-writer/$(WR_SKETCH)/$(WR_SKETCH).ino $(WR_HPPFILES) $(WR_CPPFILES)
	$(WR_ASC) --upload --board $(WR_BOARD) $<

$(WR_OBJNAME)-$(WR_RUNTIME) : $(WR_SRC)
	dotnet publish rom-writer/$(WR_PROJNAME).csproj -r $(WR_RUNTIME) -p:PublishSingleFile=true
	cp rom-writer/bin/Debug/$(WR_FRAMEWORK)/$(WR_RUNTIME)/publish/$(WR_PROJNAME) ./$(WR_OBJNAME)-$(WR_RUNTIME)
	cp rom-writer/bin/Debug/$(WR_FRAMEWORK)/$(WR_RUNTIME)/publish/libSystem.IO.Ports.Native.so ./
	chmod +x $(WR_OBJNAME)-$(WR_RUNTIME)

# Assembler target
$(AS_OBJNAME) : $(AS_SRC)
	dotnet publish assembler/$(AS_PROJNAME).csproj -r $(AS_RUNTIME) -p:PublishSingleFile=true
	cp assembler/bin/Debug/$(WR_FRAMEWORK)/$(AS_RUNTIME)/publish/$(AS_PROJNAME) ./$(AS_OBJNAME)
	chmod +x $(AS_OBJNAME)
